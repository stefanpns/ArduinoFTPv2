SCANDIR(3)                 Linux Programmer's Manual                SCANDIR(3)

NNAAMMEE
       scandir,  scandirat,  alphasort,  versionsort  -  scan  a directory for
       matching entries

SSYYNNOOPPSSIISS
       ##iinncclluuddee <<ddiirreenntt..hh>>

       iinntt ssccaannddiirr((ccoonnsstt cchhaarr **_d_i_r_p,, ssttrruucctt ddiirreenntt ******_n_a_m_e_l_i_s_t,,
              iinntt ((**_f_i_l_t_e_r))((ccoonnsstt ssttrruucctt ddiirreenntt **)),,
              iinntt ((**_c_o_m_p_a_r))((ccoonnsstt ssttrruucctt ddiirreenntt ****,, ccoonnsstt ssttrruucctt ddiirreenntt ****))));;

       iinntt aallpphhaassoorrtt((ccoonnsstt ssttrruucctt ddiirreenntt ****_a,, ccoonnsstt ssttrruucctt ddiirreenntt ****_b));;

       iinntt vveerrssiioonnssoorrtt((ccoonnsstt ssttrruucctt ddiirreenntt ****_a,, ccoonnsstt ssttrruucctt ddiirreenntt ****_b));;

       ##iinncclluuddee <<ffccnnttll..hh>>          /* Definition of AT_* constants */
       ##iinncclluuddee <<ddiirreenntt..hh>>

       iinntt ssccaannddiirraatt((iinntt _d_i_r_f_d,, ccoonnsstt cchhaarr **_d_i_r_p,, ssttrruucctt ddiirreenntt ******_n_a_m_e_l_i_s_t,,
              iinntt ((**_f_i_l_t_e_r))((ccoonnsstt ssttrruucctt ddiirreenntt **)),,
              iinntt ((**_c_o_m_p_a_r))((ccoonnsstt ssttrruucctt ddiirreenntt ****,, ccoonnsstt ssttrruucctt ddiirreenntt ****))));;

   Feature Test Macro Requirements for glibc (see ffeeaattuurree__tteesstt__mmaaccrrooss(7)):

       ssccaannddiirr(), aallpphhaassoorrtt():
           /* Since glibc 2.10: */ _POSIX_C_SOURCE >= 200809L
               || /* Glibc versions <= 2.19: */ _BSD_SOURCE || _SVID_SOURCE

       vveerrssiioonnssoorrtt(): _GNU_SOURCE

       ssccaannddiirraatt(): _GNU_SOURCE

DDEESSCCRRIIPPTTIIOONN
       The ssccaannddiirr() function scans the directory _d_i_r_p,  calling  _f_i_l_t_e_r()  on
       each  directory  entry.  Entries for which _f_i_l_t_e_r() returns nonzero are
       stored in strings allocated via mmaalllloocc(3), sorted using  qqssoorrtt(3)  with
       the comparison function _c_o_m_p_a_r(), and collected in array _n_a_m_e_l_i_s_t which
       is allocated via mmaalllloocc(3).  If _f_i_l_t_e_r is NULL,  all  entries  are  se‐
       lected.

       The aallpphhaassoorrtt() and vveerrssiioonnssoorrtt() functions can be used as the compari‐
       son function _c_o_m_p_a_r().  The former sorts directory entries  using  ssttrr‐‐
       ccoollll(3), the latter using ssttrrvveerrssccmmpp(3) on the strings _(_*_a_)_-_>_d___n_a_m_e and
       _(_*_b_)_-_>_d___n_a_m_e.

   ssccaannddiirraatt(())
       The ssccaannddiirraatt() function operates in exactly the same way as ssccaannddiirr(),
       except for the differences described here.

       If the pathname given in _d_i_r_p is relative, then it is interpreted rela‐
       tive to the directory referred to by the file descriptor _d_i_r_f_d  (rather
       than  relative to the current working directory of the calling process,
       as is done by ssccaannddiirr() for a relative pathname).

       If _d_i_r_p is relative and _d_i_r_f_d is the special value AATT__FFDDCCWWDD, then  _d_i_r_p
       is interpreted relative to the current working directory of the calling
       process (like ssccaannddiirr()).

       If _d_i_r_p is absolute, then _d_i_r_f_d is ignored.

       See ooppeennaatt(2) for an explanation of the need for ssccaannddiirraatt().

RREETTUURRNN VVAALLUUEE
       The ssccaannddiirr() function returns the  number  of  directory  entries  se‐
       lected.  On error, -1 is returned, with _e_r_r_n_o set to indicate the cause
       of the error.

       The aallpphhaassoorrtt() and vveerrssiioonnssoorrtt()  functions  return  an  integer  less
       than,  equal  to, or greater than zero if the first argument is consid‐
       ered to be respectively less than, equal to, or greater than  the  sec‐
       ond.

EERRRROORRSS
       EENNOOEENNTT The path in _d_i_r_p does not exist.

       EENNOOMMEEMM Insufficient memory to complete the operation.

       EENNOOTTDDIIRR
              The path in _d_i_r_p is not a directory.

       The following additional errors can occur for ssccaannddiirraatt():

       EEBBAADDFF  _d_i_r_f_d is not a valid file descriptor.

       EENNOOTTDDIIRR
              _d_i_r_p is a relative path and _d_i_r_f_d is a file descriptor referring
              to a file other than a directory.

VVEERRSSIIOONNSS
       vveerrssiioonnssoorrtt() was added to glibc in version 2.1.

       ssccaannddiirraatt() was added to glibc in version 2.15.

AATTTTRRIIBBUUTTEESS
       For an  explanation  of  the  terms  used  in  this  section,  see  aatt‐‐
       ttrriibbuutteess(7).

       ┌───────────────────────────┬───────────────┬────────────────┐
       │IInntteerrffaaccee                  │ AAttttrriibbuuttee     │ VVaalluuee          │
       ├───────────────────────────┼───────────────┼────────────────┤
       │ssccaannddiirr(), ssccaannddiirraatt()     │ Thread safety │ MT-Safe        │
       ├───────────────────────────┼───────────────┼────────────────┤
       │aallpphhaassoorrtt(), vveerrssiioonnssoorrtt() │ Thread safety │ MT-Safe locale │
       └───────────────────────────┴───────────────┴────────────────┘

CCOONNFFOORRMMIINNGG TTOO
       aallpphhaassoorrtt(), ssccaannddiirr(): 4.3BSD, POSIX.1-2008.

       vveerrssiioonnssoorrtt() and ssccaannddiirraatt() are GNU extensions.

NNOOTTEESS
       Since  glibc  2.1,  aallpphhaassoorrtt()  calls ssttrrccoollll(3); earlier it used ssttrr‐‐
       ccmmpp(3).

       Before glibc 2.10, the two arguments of aallpphhaassoorrtt()  and  vveerrssiioonnssoorrtt()
       were  typed  as  _c_o_n_s_t  _v_o_i_d _*.   When  aallpphhaassoorrtt() was standardized in
       POSIX.1-2008, the argument type was specified as  the  type-safe  _c_o_n_s_t
       _s_t_r_u_c_t  _d_i_r_e_n_t _*_*, and glibc 2.10 changed the definition of aallpphhaassoorrtt()
       (and the nonstandard vveerrssiioonnssoorrtt()) to match the standard.

EEXXAAMMPPLLEE
       The program below prints a list of the files in the  current  directory
       in reverse order.

   PPrrooggrraamm ssoouurrccee

       #define _DEFAULT_SOURCE
       #include <dirent.h>
       #include <stdio.h>
       #include <stdlib.h>

       int
       main(void)
       {
           struct dirent **namelist;
           int n;

           n = scandir(".", &namelist, NULL, alphasort);
           if (n == -1) {
               perror("scandir");
               exit(EXIT_FAILURE);
           }

           while (n--) {
               printf("%s\n", namelist[n]->d_name);
               free(namelist[n]);
           }
           free(namelist);

           exit(EXIT_SUCCESS);
       }

SSEEEE AALLSSOO
       cclloosseeddiirr(3),    ffnnmmaattcchh(3),   ooppeennddiirr(3),   rreeaaddddiirr(3),   rreewwiinnddddiirr(3),
       sseeeekkddiirr(3), ssttrrccmmpp(3), ssttrrccoollll(3), ssttrrvveerrssccmmpp(3), tteellllddiirr(3)

CCOOLLOOPPHHOONN
       This page is part of release 5.05 of the Linux  _m_a_n_-_p_a_g_e_s  project.   A
       description  of  the project, information about reporting bugs, and the
       latest    version    of    this    page,    can     be     found     at
       https://www.kernel.org/doc/man-pages/.

GNU                               2017-09-15                        SCANDIR(3)
